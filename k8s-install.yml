---
- name: prepare k8s needs
  gather_facts: true
  hosts: localhost
  connection: local
  vars_prompt:
    - name: kubernetes_version
      prompt: kubernetes version
      default: "v1.3.3"
      private: no
    - name: kubernetes_checksum
      prompt: "DOWNLOAD SHA256 checksum"
      default: "a92a74a0d3f7d02d01ac2c8dfb5ee2e97b0485819e77b2110eb7c6b7c782478c"
      private: no
  vars:
    # master_ip: 192.168.80.117
    # master_hostname: master1
    downloads_dir: "{{ playbook_dir }}/downloads"
  tasks:
    - name: "mkdir -p {{ item }}"
      file: >
        path={{ downloads_dir }}/{{ item }}
        state=directory
      with_items:
        - "kubernetes-{{ kubernetes_version }}"
        - "kubernetes-{{ kubernetes_version }}/bin"

    - get_url: >
        url=https://github.com/kubernetes/kubernetes/releases/download/{{ kubernetes_version }}/kubernetes.tar.gz
        dest="{{ downloads_dir }}/kubernetes-{{ kubernetes_version }}.tar.gz"
        checksum=sha256:{{ kubernetes_checksum }}
      name: download k8s from github release tag {{ kubernetes_version }}

    - unarchive: >
        src="{{ downloads_dir }}/kubernetes-{{ kubernetes_version }}.tar.gz"
        dest="{{ downloads_dir }}/kubernetes-{{ kubernetes_version }}/"
        creates={{ downloads_dir }}/kubernetes-{{ kubernetes_version }}/kubernetes/version
        copy=no
      name: "extract kubernetes-{{ kubernetes_version }}.tar.gz"

    - name: "extract Kubernetes binaries"
      unarchive: >
        src="{{ downloads_dir }}/kubernetes-{{ kubernetes_version }}/kubernetes/server/kubernetes-server-linux-amd64.tar.gz"
        dest="{{ downloads_dir }}/kubernetes-{{ kubernetes_version }}/bin/"
        creates={{ downloads_dir }}/kubernetes-{{ kubernetes_version }}/bin/kubernetes/server/bin/hyperkube
        copy=no

    - name: install kubectl
      file: >
        src="{{ downloads_dir }}/kubernetes-{{ kubernetes_version }}/bin/kubernetes/server/bin/kubectl"
        dest=/usr/local/bin/kubectl
        state=link
      become: yes

    - name: enable kubectl completion
      blockinfile:
        dest: ~/.bashrc
        block: |
          # kubectl completion
          source <(kubectl completion bash)
      become: yes
