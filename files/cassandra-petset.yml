---
# Headless service to provide DNS lookup
apiVersion: v1
kind: Service
metadata:
  labels:
    app: cassandra
  name: cassandra
spec:
  clusterIP: None
  ports:
    - port: 9042
  selector:
    app: cassandra-data
---
apiVersion: "apps/v1alpha1"
kind: PetSet
metadata:
  name: cassandra-data
spec:
  serviceName: cassandra
  # replicas are the same as used by Replication Controllers
  # except pets are deployed in order 0, 1, 2, 3, etc
  replicas: 2
  template:
    metadata:
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
      labels:
        app: cassandra-data
    spec:
      # just as other component in Kubernetes one
      # or more containers are deployed
      containers:
      - name: cassandra
        image: "127.0.0.1:5000/inu/cassandra:3.7-alpine"
        imagePullPolicy: IfNotPresent
        #command: [ "/usr/local/bin/dumb-init", "--" ]
        args: [ "/run.sh", "/opt/cassandra/bin/cassandra", "-f", "-R" ]
        #command: [ "sh", "-c", "echo 'running since '`date +'%r'`; while true; do sleep 600; done"]
        ports:
        - containerPort: 7000
          name: intra-node
        - containerPort: 9042
          name: cql
        # resources:
        #   limits:
        #     cpu: "2"
        #     memory: "4Gi"
        #   requests:
        #    cpu: "2"
        #    memory: "2Gi"
        securityContext:
          privileged: true
        env:
          # - name: MAX_HEAP_SIZE
          #   value: 4096M
          # - name: HEAP_NEWSIZE
          #   value: 2048M
          # this is relying on guaranteed network identity of Pet Sets, we
          # will know the name of the Pets / Pod before they are created
          - name: CASSANDRA_SEEDS
            value: "cassandra-data-0.cassandra.default.svc.cluster.local"
          - name: CASSANDRA_CLUSTER_NAME
            value: "homemade"
          - name: CASSANDRA_DC
            value: "DC1"
          - name: CASSANDRA_RACK
            value: "RAC1"
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: SERVICE_NAME
            value: "cassandra"
        # readinessProbe:
        #   exec:
        #     command:
        #     - /bin/bash
        #     - -c
        #     - /ready-probe.sh
        #   initialDelaySeconds: 15
        #   timeoutSeconds: 5
        volumeMounts:
          - name: data
            mountPath: /opt/cassandra/data
  volumeClaimTemplates:
  - metadata:
     name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 2